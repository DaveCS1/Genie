<#@ template language="C#" #>
<#@ import namespace="Genie.Base" #>
<#@ import namespace="Genie.Extensions"#>
<#@ import namespace="System.Linq"#>
using System.Data;
using System.Collections.Generic;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Filters.Abstract;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure.Models.Abstract.Context
{
	public interface I<#=_name#>QueryContext
	{
        I<#=_name#>QueryContext Page(int pageSize, int page);
        I<#=_name#>QueryContext Top(int limit);
        I<#=_name#>QueryContext Skip(int skip);
        I<#=_name#>QueryContext Take(int take);
		I<#=_name#>FilterContext Where { get; }
		I<#=_name#>OrderContext OrderBy { get; }
	    IEnumerable<Concrete.<#=_name#>> Query(IDbTransaction transaction = null);
		I<#=_name#>QueryContext Filter(IEnumerable<IPropertyFilter> filters);
	    int Count(IDbTransaction transaction = null);
	}
}