<#@ template language="C#" #>
<#@ import namespace="Genie.Base.Generating.Concrete" #>

<#if(GenerationContext.Core){#>
using Microsoft.Extensions.Configuration;
<#}else{#>
using System.Configuration;
<#}#>
using System.Data;
using System.Data.SqlClient;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure
{
	/// <summary>
    /// An Implementation that uses SqlConnection
    /// </summary>
	public class DapperContext : IDapperContext
    {
        private readonly string _connectionString;
        private IDbConnection _connection;

		/// <summary>
        /// Initialize  a new dapper context 
        /// </summary>
<#if(GenerationContext.Core){#>
        public DapperContext(IConfiguration configuration)
        {
			 _connectionString = configuration["connectionString"];
		}
<#}else{#>
		public DapperContext()
        {
			var connectionStringName = ConfigurationManager.AppSettings["UsedConnectionString"];
			_connectionString = ConfigurationManager.ConnectionStrings[connectionStringName].ConnectionString;	
		}
<#}#>

		/// <summary>
        /// Get the connection to the database
        /// </summary>
        public IDbConnection Connection => _connection ?? (_connection = new SqlConnection(_connectionString));

        public IUnitOfWork Unit() 
        {
            return new UnitOfWork(this);
        }
    }
}
