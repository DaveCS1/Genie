<#@ template language="C#" #>
<#@ import namespace="Genie.Base" #>
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure
{
	/// <summary>
    /// An Implementation that uses SqlConnection
    /// </summary>
	public class DapperContext : IDapperContext
    {
        private readonly string _connectionString;
        private IDbConnection _connection;

		/// <summary>
        /// Initialize  a new dapper context 
        /// </summary>
        public DapperContext()
        {
            var connectionStringName = ConfigurationManager.AppSettings["UsedConnectionString"];
            _connectionString = ConfigurationManager.ConnectionStrings[connectionStringName].ConnectionString; ;
        }

		/// <summary>
        /// Get the connection to the database
        /// </summary>
        public IDbConnection Connection
        {
		    get
		    {
                if (_connection == null)
                    _connection = new SqlConnection(_connectionString);
                if (_connection.State != ConnectionState.Open)
                    _connection.Open();

                return _connection;
            }
        }

        public IUnitOfWork Unit() 
        {
            return new UnitOfWork(this);
        }

		/// <summary>
        /// Dispose the context
        /// </summary>
        public void Dispose()
        {
		    if (_connection == null)
                return;

		    if (_connection.State != ConnectionState.Closed)
		        _connection.Close();
		    _connection.Dispose();
        }
    }
}
