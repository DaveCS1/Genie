<#@ template language="C#" #>
<#@ import namespace="Genie.Base.Generating.Concrete" #>
using System.Collections.Generic;
using System.Data;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Filters.Abstract;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces
{
	public interface IReadOnlyRepository<out T>
		where T : class
	{
		IDbConnection Conn { get; }
		IDapperContext Context { get; }

        IEnumerable<T> Get(IRepoQuery query);
		T GetFirstOrDefault(IRepoQuery query);
	    int Count(IRepoQuery query);
		string GetWhereClause(IRepoQuery query);
	}
}
