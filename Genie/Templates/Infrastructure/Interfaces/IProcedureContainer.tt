<#@ template language="C#" #>
<#@ import namespace="Genie.Base.Generating.Concrete" #>
using System;
using System.Collections.Generic;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces
{
	public interface IProcedureContainer
    {
<#foreach(var sp in _schema.Procedures){#>
		IEnumerable<T> <#=sp.Name#>_List<T>(<#=sp.ParamString#>);
<#}#>

<#foreach(var sp in _schema.Procedures){#>
		T <#=sp.Name#>_Single<T>(<#=sp.ParamString#>);
<#}#>

<#foreach(var sp in _schema.Procedures){#>
		void <#=sp.Name#>_Void(<#=sp.ParamString#>);
<#}#>
    }
}
