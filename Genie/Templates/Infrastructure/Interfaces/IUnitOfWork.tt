<#@ template language="C#" #>
<#@ import namespace="Genie.Base" #>
using System;
using System.Data;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Models.Concrete;
using System.Collections.Generic;
using <#=GenerationContext.BaseNamespace#>.Infrastructure.Repositories.Abstract;

namespace <#=GenerationContext.BaseNamespace#>.Infrastructure.Interfaces
{
	public interface IUnitOfWork : IDisposable
    {

        IDbTransaction BeginTransaction();

	    void AddOp(IOperation operation);
        void AddObj(BaseModel obj);

		<#foreach(var relation in _schema.Relations){
      #>I<#=relation.Name#>Repository <#=relation.Name#>Repository { get; }
        <#}#>

        <#foreach(var view in _schema.Views){
      #>I<#=view.Name#>Repository <#=view.Name#>Repository { get; }
        <#}#>

		IProcedureContainer Procedures { get; }
        
        void Commit();
    }
}
